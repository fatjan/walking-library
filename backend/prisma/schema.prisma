generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  email         String      @unique
  name          String
  username      String      @unique
  password      String
  phoneNumber   String?
  address       String?
  role          UserRole    @default(Regular)
  status        UserStatus  @default(Active)
  borrows       Borrow[]
  borrowedBooks Book[]
}

enum UserRole {
  Regular
  Admin
}

enum UserStatus {
  Active
  Inactive
  Deleted
}

model Borrow {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   User      @relation(fields: [userId], references: [id])
  userId      Int
  book        Book      @relation(fields: [bookId], references: [id])
  bookId      Int
  status      BorrowStatus @default(Queued)
  startedAt   DateTime?
  expiredAt   DateTime?  
}

enum BorrowStatus {
  Queued
  Borrowing
  Borrowed
}

model Book {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  title         String
  author        String
  description   String?
  isFree        Boolean  @default(true)
  status        Status   @default(ComingSoon)
  borrows       Borrow[]
  borrowers     User[]
}

enum Status {
  Available
  Borrowed
  Lost
  ComingSoon
}